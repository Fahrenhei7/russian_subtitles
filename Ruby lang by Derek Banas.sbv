<?xml version="1.0" encoding="UTF-8"?>
<SubtitleEditorProject version="1.0">
  <player uri="file:///home/fahrenhei7/Downloads/Ruby%20Programming.mp4"/>
  <styles/>
  <subtitles timing_mode="TIME" edit_timing_mode="TIME" framerate="25">
    <subtitle duration="2780" effect="" end="2780" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="0" start="0" style="Default" text="Привет, интернет!&#10;И добро пожаловать в обучающее видео по Ruby!" translation=""/>
    <subtitle duration="6700" effect="" end="9480" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="1" start="2780" style="Default" text="В этом видео я затрону примерно 95% языка программирования Ruby, весь основной синтаксис." translation=""/>
    <subtitle duration="3540" effect="" end="13300" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="2" start="9760" style="Default" text="Ruby - это динамический, интерпретируемый, объектно - ориентированный язык программирования," translation=""/>
    <subtitle duration="4440" effect="" end="17740" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="3" start="13300" style="Default" text="в котором всё - объект и все объекты могут быть изменены (переписаны)." translation=""/>
    <subtitle duration="2800" effect="" end="20540" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="4" start="17740" style="Default" text="Ruby - один из наилегчайших языков для чтения и изучения," translation=""/>
    <subtitle duration="3760" effect="" end="24300" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="5" start="20540" style="Default" text="а с Rails он может быть лучшим вариантом для веб - разработки." translation=""/>
    <subtitle duration="6960" effect="" end="31260" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="6" start="24300" style="Default" text="В описании к этому видео вы найдете ссылки на разбор всех частей Ruby, о которых я расскажу," translation=""/>
    <subtitle duration="5980" effect="" end="37240" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="7" start="31260" style="Default" text="а так же ссылку на весь код, который насыщен комментариями и легок для прочтения." translation=""/>
    <subtitle duration="1920" effect="" end="39160" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="8" start="37240" style="Default" text="Хватит разговоров, давайте писать код!" translation=""/>
    <subtitle duration="3480" effect="" end="43420" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="9" start="39940" style="Default" text="В левой части экрана у меня обычный редактор текста - Sublime text," translation=""/>
    <subtitle duration="5140" effect="" end="49260" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="10" start="44120" style="Default" text="я пробую различный цветовые схемы, если вам нравится - напишите в комментарии." translation=""/>
    <subtitle duration="4060" effect="" end="53320" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="11" start="49260" style="Default" text="А в правой части у меня терминал или коммандная строка, если вы на Windows." translation=""/>
    <subtitle duration="2680" effect="" end="56520" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="12" start="53840" style="Default" text="Я не буду показывать как установить руби, это очень просто:" translation=""/>
    <subtitle duration="5260" effect="" end="61780" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="13" start="56520" style="Default" text="зайдите на сайт ruby-lang.org в раздел &quot;установка&quot;" translation=""/>
    <subtitle duration="6560" effect="" end="68340" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="14" start="61780" style="Default" text="и вы найдете всю необходимую информацию и установщики, для различных операционных систем." translation=""/>
    <subtitle duration="4960" effect="" end="73300" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="15" start="68340" style="Default" text="В первой части я кратко расскажу про разные вещи," translation=""/>
    <subtitle duration="4300" effect="" end="77600" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="16" start="73300" style="Default" text="Если вы хотите написать комментарий, поставьте символ &quot;решетки&quot; - это комментарий." translation=""/>
    <subtitle duration="2980" effect="" end="80580" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="17" start="77600" style="Default" text="Я покажу другие типы комментариев чуть позже" translation=""/>
    <subtitle duration="6100" effect="" end="86680" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="18" start="80580" style="Default" text="Если вы хотите вывести что - то на экране - очень просто. Например напишем &quot;Enter a Value: &quot; (&quot;введите значение&quot;)" translation=""/>
    <subtitle duration="4840" effect="" end="91520" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="19" start="86680" style="Default" text="Названия переменных могут начинаться с букв нижнего регистра или символа нижнего подчеркивания" translation=""/>
    <subtitle duration="7820" effect="" end="99340" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="20" start="91520" style="Default" text="обычно с букв нижнего регистра, и конечно после подчеркивания или буквы вы можете использовать использовать цифры в названиях переменных." translation=""/>
    <subtitle duration="8740" effect="" end="108080" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="21" start="99340" style="Default" text="Давайте создадим переменную. Обычно при названии переменных используются тире или нижние подчеркивания между различными словами в вашем названии." translation=""/>
    <subtitle duration="9600" effect="" end="117680" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="22" start="108080" style="Default" text="Теперь, если я хочу получить информацию от пользователя, я просто печатаю &quot;gets&quot;, далее, я хочу преобразовать это из &quot;строки&quot; в &quot;число&quot;, я пишу &quot;to_i&quot;." translation=""/>
    <subtitle duration="5200" effect="" end="122880" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="23" start="117680" style="Default" text="Потом просим написать другое значение" translation=""/>
    <subtitle duration="5880" effect="" end="128760" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="24" start="122880" style="Default" text="Используем &quot;gets&quot; ещё раз. Очень важно преобразовать это в &quot;число&quot;." translation=""/>
    <subtitle duration="3100" effect="" end="131860" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="25" start="128760" style="Default" text="Ещё один вариант, как мы может вывести информацию - использовать &quot;puts&quot;." translation=""/>
    <subtitle duration="6260" effect="" end="138120" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="26" start="131860" style="Default" text="И разница между &quot;print&quot; и &quot;puts&quot; в том, что первое не создаст новую линию после того, как выведет ваш текст" translation=""/>
    <subtitle duration="2340" effect="" end="140460" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="27" start="138120" style="Default" text="а &quot;puts&quot; - создаст новую линию." translation=""/>
    <subtitle duration="7980" effect="" end="148440" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="28" start="140460" style="Default" text="Скажем, мы хотим вывести переменную, нам нужно конвертировать её обратно в &quot;строку&quot;, просто пишем &quot;to_s&quot;." translation=""/>
    <subtitle duration="11540" effect="" end="159980" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="29" start="148440" style="Default" text="Если вы хотите соединить или скомбинировать &quot;строки&quot;, просто напишите знак &quot;+&quot;, я напишу &quot; + &quot; и второе число, потом &quot; = &quot;" translation=""/>
    <subtitle duration="4040" effect="" end="164020" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="30" start="159980" style="Default" text="вы можете видеть как я  перехожу на следующую строку," translation=""/>
    <subtitle duration="3300" effect="" end="167320" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="31" start="164020" style="Default" text="и конечно вам не нужны точки с запятой после каждого объявления (метода, переменной и т.д. прим. пер)" translation=""/>
    <subtitle duration="6060" effect="" end="173380" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="32" start="167320" style="Default" text="Если нужно что - то вычислить напишем так (см. код) преобразуем это в &quot;строку&quot;." translation=""/>
    <subtitle duration="4360" effect="" end="177740" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="33" start="173380" style="Default" text="Далее идем сюда, и вы можете видеть имя моего файла - rubyOrNotRuby." translation=""/>
    <subtitle duration="7080" effect="" end="184820" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="34" start="177740" style="Default" text="Я просто напишу ruby что - бы выполнить его, вы можете видеть: расширение &quot;.rb&quot;, такое расширение у всех файлов Ruby." translation=""/>
    <subtitle duration="6540" effect="" end="191360" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="35" start="184820" style="Default" text="Если мы исполним файл, вы можете видеть &quot;Введите значение: &quot;  я напишу 2, &quot;Введите другое значение: &quot; допустим 3, и вы можете видеть ответ появился на экране." translation=""/>
    <subtitle duration="9040" effect="" end="200400" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="36" start="191360" style="Default" text="Вы видите пять основных арифметических операторов (знаков). Мы конечно же можем складывать, вычитать, умножать, делить, находить остаток от деления." translation=""/>
    <subtitle duration="4000" effect="" end="204400" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="37" start="200400" style="Default" text="Посмотрите сюда, все они тут, ответы показаны на экране." translation=""/>
    <subtitle duration="12240" effect="" end="216640" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="38" start="204400" style="Default" text="Целые числа, или &quot;фиксированные&quot; числа (как типы данных) могут хранить очень большие числа, которые даже не помястятся в окне редактора. Они очень даже большие." translation=""/>
    <subtitle duration="5760" effect="" end="222400" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="39" start="216640" style="Default" text="Ruby использует другой способ хранения чисел, что позволяет вам хранить такие большие числа." translation=""/>
    <subtitle duration="11120" effect="" end="233520" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="40" start="222400" style="Default" text="Давайте создадим ещё одно число, что - бы показать пример точности чисел с плавающей точкой, скажем это будет &quot;1.000&quot;" translation=""/>
    <subtitle duration="9200" effect="" end="242720" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="41" start="233520" style="Default" text="Создадим ещё одно не целое число, и вещь, которую вы должны запомнить об этом - всегда должно быть число перед точкой, когда мы определяем его." translation=""/>
    <subtitle duration="15600" effect="" end="258320" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="42" start="242720" style="Default" text="Напишем ... , преобразуем в &quot;строку&quot; и давайте в этот раз произведем вычитание ... теперь это преобразуем в &quot;строку&quot;, ... и снова в &quot;строку&quot;. Сохраним." translation=""/>
    <subtitle duration="6400" effect="" end="264720" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="43" start="258320" style="Default" text="Когда мы вычислим мы видим, что все довольно точно, до самого конца, где мы видим цифру 9." translation=""/>
    <subtitle duration="5760" effect="" end="270480" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="44" start="264720" style="Default" text="Обычно в числах с плавающей точкой вы можете верить, что первые 14 цифр будут точными, чего вполне достаточно." translation=""/>
    <subtitle duration="9040" effect="" end="279520" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="45" start="270480" style="Default" text="Давайте создадим большое число, произведем немного вычислений... не забывайте ставить ноль перед точкой," translation=""/>
    <subtitle duration="15360" effect="" end="294880" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="46" start="279520" style="Default" text="Помните про 14 точных чисел, тут не очень точно, как и в любом другом языке программирования, операции с числами с плавающей точкой не точные, вам следует избегать их." translation=""/>
    <subtitle duration="11500" effect="" end="306380" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="47" start="294880" style="Default" text="Ранее я сказал что всё в руби - объект, давайте убедимся в этом, напишем &quot;.class&quot;, он веренет нам класс того, что ему предшествует," translation=""/>
    <subtitle duration="7200" effect="" end="313580" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="48" start="306380" style="Default" text="напишем число с плавающей точкой и .class, и конечно мы можем проверить &quot;строку&quot;." translation=""/>
    <subtitle duration="5460" effect="" end="319040" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="49" start="313580" style="Default" text="Когда мы выполним это, увидем &quot;Fixnum&quot;, &quot;Float&quot; и &quot;String&quot;." translation=""/>
    <subtitle duration="5000" effect="" end="324040" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="50" start="319040" style="Default" text="Мы увидем ещё примеры что такое объект в руби. Вообще всё." translation=""/>
    <subtitle duration="6600" effect="" end="330720" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="51" start="324120" style="Default" text="Константы пишутся заглавными буквами. Вот так (см. код)" translation=""/>
    <subtitle duration="6920" effect="" end="337640" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="52" start="330720" style="Default" text="Однако мы должны помнить, когда мы назвали переменную константой, мы не подразумевали её изменение." translation=""/>
    <subtitle duration="7640" effect="" end="345280" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="53" start="337640" style="Default" text="Если мы изменим значение константы мы получим ошибку, но она всё таки изменится." translation=""/>
    <subtitle duration="5720" effect="" end="351000" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="54" start="345280" style="Default" text="Как вы можете видеть здесь - предупреждение, однако значение константы изменилось." translation=""/>
    <subtitle duration="6353" effect="" end="357353" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="55" start="351000" style="Default" text="Сейчас я покажу вам одну более продвинутую штуку. Допустим мы хотим создать объект - файл. Это довольно просто сделать." translation=""/>
    <subtitle duration="7495" effect="" end="364848" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="56" start="357353" style="Default" text="Создаём переменную (см.код), будем использовать объект - File. Я расскажу о нем более подробно в конце видео." translation=""/>
    <subtitle duration="6147" effect="" end="370995" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="57" start="364848" style="Default" text="Скажем, у нас есть файл yourSum, в который мы хотим что - то записать. Давайте дадим ему расширение &quot;.out&quot;." translation=""/>
    <subtitle duration="4890" effect="" end="375885" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="58" start="370995" style="Default" text="И, скажем, что мы хотим записать (w - write) в него что-то. Это создаст файл, если его ещё не существует." translation=""/>
    <subtitle duration="11369" effect="" end="387254" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="59" start="375885" style="Default" text="Используем команду, что-бы поместить текст в файл. Вы можете помещать переменные, практически все, что захотите. Но вам нужно преобразовать это в &quot;строку&quot;." translation=""/>
    <subtitle duration="4282" effect="" end="391536" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="60" start="387254" style="Default" text="Мы должны написать команду &quot;.close&quot;, что-бы закрыть файл после того, как загрузили его." translation=""/>
    <subtitle duration="10417" effect="" end="401953" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="61" start="391536" style="Default" text="Теперь если мы хотим получить информацию из файла, мы снова используем объект - File, пишем, что нужно прочесть и откуда," translation=""/>
    <subtitle duration="6331" effect="" end="408284" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="62" start="401953" style="Default" text="наш файл называется &quot;youSum.out&quot;, выводим информацию на экран, как вы можете видеть вот так просто." translation=""/>
    <subtitle duration="7747" effect="" end="416031" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="63" start="408284" style="Default" text="Как вы можете видеть, вот наша информация из файла, который мы создали, заполнили, закрыли, открыли, прочли его и сейчас вывели информацию на экран." translation=""/>
    <subtitle duration="16573" effect="" end="432604" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="64" start="416031" style="Default" text="Если вам нужна команда, что-бы загрузить и исполнить код из другого файла руби (.rb) то делаем так: (см. код) создадим новый файл rubyOrNotRuby2 " translation=""/>
    <subtitle duration="5700" effect="" end="438304" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="65" start="432604" style="Default" text="Напишем &quot;Hello From rubyOrNotRuby2&quot;, сохраним," translation=""/>
    <subtitle duration="8161" effect="" end="446465" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="66" start="438304" style="Default" text="Вернемся назад, сохраним и выполним -  увидем как просто можно исполнить код из других файлов. " translation=""/>
    <subtitle duration="11586" effect="" end="458051" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="67" start="446465" style="Default" text="А сейчас давайте посмотрим на условные операторы. И ещё одна вещь, которую стоит запомнить - как писать многострочные комментарии. (см. код)" translation=""/>
    <subtitle duration="4411" effect="" end="462462" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="68" start="458051" style="Default" text="Это немного странная реализация многострочных комментариев но это то, что есть в руби." translation=""/>
    <subtitle duration="1914" effect="" end="464376" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="69" start="462462" style="Default" text="Теперь посмотрим на условные операторы." translation=""/>
    <subtitle duration="12942" effect="" end="477318" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="70" start="464376" style="Default" text="Допустим у нас есть переменная age, дадим ей значение 12. Мы можем использовать оператор if (см. код). Если age больше либо равно 5," translation=""/>
    <subtitle duration="7403" effect="" end="484721" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="71" start="477318" style="Default" text="мы так же можем использовать логические операторы: например И (&amp;&amp;) или НЕ( ! ) . Напишем age меньше либо равно 6," translation=""/>
    <subtitle duration="4107" effect="" end="488828" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="72" start="484721" style="Default" text="теперь мы можем писать ниже. Нам не нужны фигурные скобки, которые вы могли использовать раньше (имеется ввиду в других языках)" translation=""/>
    <subtitle duration="3943" effect="" end="492771" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="73" start="488828" style="Default" text="Например напишем &quot;You're in Kindergarten&quot; (вы в детском саду)" translation=""/>
    <subtitle duration="14615" effect="" end="507386" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="74" start="492771" style="Default" text="Далее мы можем написать (см. код) elsif age больше либо равно 7 И age меньше либо равно 13, и тогда вывести другую информацию. &quot;Ты в средней школе&quot;" translation=""/>
    <subtitle duration="5616" effect="" end="513002" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="75" start="507386" style="Default" text="Одна важная вещь - мы можем писать на нескольких строках. Напишем ещё &quot;Yeah&quot;" translation=""/>
    <subtitle duration="3993" effect="" end="516995" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="76" start="513002" style="Default" text="Если ничего из этого не подходит, напишем else - &quot;Stay Home&quot; (оставайся дома)" translation=""/>
    <subtitle duration="4880" effect="" end="521875" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="77" start="516995" style="Default" text="Очень важно, чтобы ваш условный оператор if/else заканчивался словом end." translation=""/>
    <subtitle duration="3258" effect="" end="525133" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="78" start="521875" style="Default" text="Выполним код и увидем, &quot;Вы в средней школе&quot; и &quot;Yeah&quot; отобразились на экране." translation=""/>
    <subtitle duration="7453" effect="" end="532586" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="79" start="525133" style="Default" text="Так же важно знать, что есть несколько различных операторов сравнения:" translation=""/>
    <subtitle duration="3106" effect="" end="535692" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="80" start="532586" style="Default" text="равно ( == ), не равно( != ), меньше ( &lt; ), больше ( &gt; ) " translation=""/>
    <subtitle duration="3460" effect="" end="539152" layer="0" margin-l="0" margin-r="0" margin-v="0" name="" note="" path="81" start="535692" style="Default" text="меньше либо равно ( &lt;= ), больше либо равно ( &gt;= )" translation=""/>
  </subtitles>
  <subtitles-selection/>
</SubtitleEditorProject>
